# simple_system.bngl
begin model
begin parameters

	ITERATIONS  10
    MCELL_DIFFUSION_CONSTANT_3D_X 9e-5
    MCELL_DIFFUSION_CONSTANT_3D_Y 8e-5
    MCELL_DEFAULT_COMPARTMENT_VOLUME (1/8)^3
    
    NA_um3 6.022e8
    VOL_RXN 1
    MCELL_REDEFINE_VOL_RXN NA_um3
	
	kon     10 * VOL_RXN
	koff    300
	kcat    200
	dephos  100
	
end parameters
begin species
	X(y,p~0,p~0)  500
	X(y,p~1,p~1)  0  # this species cannot be created
	Y(x)          50
end species
begin reaction rules
	X(p~1)             ->  X(p~0)               dephos
	X(y,p~0) + Y(x)    ->  X(y!1,p~0).Y(x!1)    kon
	X(y!1,p~0).Y(x!1)  ->  X(y,p~0) + Y(x)    koff # rate for this rxn should be 2xkoff
	# X(y!1,p~0).Y(x!1)  ->  X(y,p~1) + Y(x)      kcat # having multiple unimol rxns rxn causes pymcell4 to diverge from mcell4
end reaction rules
begin observables
    Molecules X_free  X(p~0,y)
    Molecules Xp_free X(p~1,y)
    Molecules Xpp     X(p~1,p~1)
    #Molecules XY  b   X(y!1).Y(x!1)
end observables
end model

generate_network({overwrite=>1})
simulate_ode({suffix=>"ode",t_end=>100,n_steps=>100})
resetConcentrations()
simulate_ssa({suffix=>"ssa",t_end=>100,n_steps=>100})
resetConcentrations()
writeXML()

