// how to specify a difference?
// we definitely want to have a way how to specify dynamic geometry through mdl, 
// at least for testing


/*
// change of size, just one point
A POLYGON_LIST
{
  VERTEX_LIST
  {
    [  0.02,  0.02, -0.02 ]
    [  0.01, -0.01, -0.01 ]
    [ -0.01, -0.01, -0.01 ]
    [ -0.01,  0.01, -0.01 ]
    [  0.01,  0.01,  0.01 ]
    [  0.01, -0.01,  0.01 ]
    [ -0.01, -0.01,  0.01 ]
    [ -0.01,  0.01,  0.01 ]
  }
  ELEMENT_CONNECTIONS
  {
    [ 0, 1, 2 ]
    [ 4, 7, 5 ]
    [ 0, 4, 1 ]
    [ 1, 5, 2 ]
    [ 2, 6, 7 ]
    [ 4, 0, 7 ]
    [ 3, 0, 2 ]
    [ 4, 5, 1 ]
    [ 0, 3, 7 ]
    [ 7, 6, 5 ]
    [ 3, 2, 7 ]
    [ 5, 6, 2 ]
  }
}

INSTANTIATE DGScene OBJECT
{
  A OBJECT A{}
}
*/


// vertex must be already instantiated
/*
VERTEX A[0] 
{
	TRANSLATE = [  0.01,  0.01, -0.01 ]
}

// and:

VERTEX A[0] 
{ 
	TO = [  0.02,  0.02, -0.02 ]
}


// --- or 
// should be extensible to whole objects later
TRANSLATE {
{

	 A[0, ... , N] 
	 = [  0.01,  0.01, -0.01 ]
}

or 

MOVE A[0] 
{ 
	TO = [  0.02,  0.02, -0.02 ]
}
*/

// -- or 

TRANSFORM {
	// A[n] represents a vertex of an object
 	OBJECT_LIST { A[0], A[2], A[3] }
 	// or VERTEX_LIST?
 	 
 	// A represents the whole object 
 	// OBJECT_LIST = { A }
 	
 	// MOVE_TO - probably do not support initially, too many weird behaviors
 	//   given also that the main purpose of having this feature in MDL is testing.. 
 	//   for vertices: move all vertices to the given position, 
 	//       makes sense mainly when there is a single vertex 
 	//   for objects: move the "upper left front" (whichever vertex it is?)
 	//   
 	//MOVE_TO = [ 0.02,  0.02, -0.02 ]
 	
 	
 	// TRANSLATE - move each vertex by a specified value
 	TRANSLATE = [ 0.01,  0.01, -0.01 ]
}
